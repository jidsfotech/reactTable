[{"C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\index.js":"1","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\App.js":"2","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\TransactionsLogTable.js":"3","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\Columns.js":"4","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\Pagination.js":"5","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\Filters.js":"6","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\DatePickerCallendarIcon.js":"7"},{"size":432,"mtime":1611575546832,"results":"8","hashOfConfig":"9"},{"size":820,"mtime":1611615007147,"results":"10","hashOfConfig":"9"},{"size":3254,"mtime":1611575054195,"results":"11","hashOfConfig":"9"},{"size":1987,"mtime":1611575076063,"results":"12","hashOfConfig":"9"},{"size":2280,"mtime":1611575076064,"results":"13","hashOfConfig":"9"},{"size":5936,"mtime":1611575617244,"results":"14","hashOfConfig":"9"},{"size":1166,"mtime":1611575076063,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"solozy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\index.js",[],["35","36"],"C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\App.js",[],"C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\TransactionsLogTable.js",["37","38","39"],"import React, { useMemo , useAsyncDebounce} from \"react\";\r\nimport TablePagination from \"./Pagination\";\r\nimport Filters from \"./Filters\";\r\nimport {\r\n    useTable,\r\n    usePagination,\r\n    useFilters,\r\n    useGlobalFilter,\r\n} from 'react-table';\r\n\r\nconst TransactionsLogTable = ({ columns, data }) => {\r\n\r\n    const filterTypes = React.useMemo(() => ({\r\n        dateFilter: (rows, id, filterValue) => {\r\n            return rows = rows.filter(row => {\r\n                return new Date(row.values.date) >= filterValue[0] && new Date(row.values.date) <= filterValue[1];\r\n            });\r\n        },\r\n    }),\r\n        []\r\n    )\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        nextPage,\r\n        previousPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        setFilter,\r\n        dispatch,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: 0, pageSize: 5 },\r\n            filterTypes,\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination\r\n    );\r\n    return (\r\n        <div>\r\n           < Filters\r\n                setFilter={setFilter}\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n                dispatch={dispatch}\r\n           />\r\n            <table {...getTableProps()} className=\"TransactionsTable\">\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render('Header')}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()} className=\"TransactionsTableBody\">\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render(\"Cell\")}\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <TablePagination\r\n                pageIndex={pageIndex}\r\n                pageOptions={pageOptions}\r\n                previousPage={previousPage}\r\n                canPreviousPage={canPreviousPage}\r\n                nextPage={nextPage}\r\n                canNextPage={canNextPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransactionsLogTable;","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\Columns.js",[],"C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\Pagination.js",["40","41"],"import React from \"react\";\r\n\r\nconst TablePagination = (props) => {\r\n    return (\r\n        <div className=\"TablePagination\">\r\n            <div className=\"table-pagesIndexing\">{props.pageIndex + 1} out of {props.pageOptions.length}</div>\r\n            <div className=\"navigationButtonsContainer\">\r\n                <button\r\n                    onClick={props.previousPage}\r\n                    disabled={!props.canPreviousPage}\r\n                > Previous\r\n                </button>\r\n                <ul style={{ display: \"flex\" }}>\r\n                    {\r\n                        props.pageOptions.map((index, page) => {\r\n                            let totalPages = props.pageOptions.length;\r\n                            if (page + 1 > 5 && page + 1 < 10 && totalPages >= 10) {\r\n                                return\r\n                            }\r\n                            if (page + 1 === 10) {\r\n                                return <li key={index}>....{10}</li>\r\n                            }\r\n                            if (page + 1 > 10 && totalPages > 10) {\r\n                                const numbersOFpagesAfter_Page_10 = props.pageOptions.slice(10);\r\n                                if (numbersOFpagesAfter_Page_10.length > 3 && page + 1 === totalPages) {\r\n                                    return <li key={index}>....{totalPages}</li>\r\n                                }\r\n                                if (numbersOFpagesAfter_Page_10.length > 3 && page + 1 <= 12) {\r\n                                    return <li key={index}>{page + 1}</li>\r\n                                }\r\n                                if (numbersOFpagesAfter_Page_10.length > 3) {\r\n                                    return\r\n                                }\r\n                                return <li key={index}>{page + 1}</li>\r\n                            }\r\n                            return <li key={index}>{page + 1}</li>\r\n                        })}\r\n                </ul>\r\n                <button\r\n                    onClick={\r\n                        props.nextPage\r\n                    }\r\n                    disabled={!props.canNextPage}\r\n                >Next\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePagination;","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\Filters.js",["42","43","44","45","46"],"import React, { useState } from \"react\";\r\nimport DatePicker from \"./DatePickerCallendarIcon\";\r\nimport { AiOutlineSync, } from \"react-icons/ai\";\r\nimport { useAsyncDebounce } from \"react-table\";\r\n\r\n const Filters = (props) => {\r\n\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [categoryFilterValue, setCategoryFilterValue] = useState(null);\r\n    const [value, setValue] = React.useState(props.globalFilter)\r\n\r\n    const count = props.preGlobalFilteredRows.length;\r\n\r\n    // attached to onChange event litener of Global filter text input box\r\n    const onChange = useAsyncDebounce(value => {\r\n        props.setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    //called when a user selects filter start-date \r\n    const handleStartDate = (date) => {\r\n        setStartDate(date);\r\n    }\r\n\r\n    //called when a user selects filter end-date \r\n    const handleEndDate = (date) => {\r\n        setEndDate(date);\r\n    }\r\n\r\n    // Hnadles Selected Category filter option and update the state  \r\n    const handleCategoryOptionsChange = (event) => {\r\n        setCategoryFilterValue(event.target.value);\r\n    };\r\n\r\n    // Auto Rest All Filters\r\n    const autoResetFilter = () => {\r\n        setStartDate(null);\r\n        setEndDate(null);\r\n        setCategoryFilterValue(null);\r\n        props.dispatch({ type: \"resetFilters\" });\r\n        var radios = document.querySelectorAll('input[name=\"category-Filters\"]');\r\n        for (let i of radios) {\r\n            if (i.checked) {\r\n                i.checked = false;\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    // Filter table by selected category option\r\n    const handleFilterByCategory = () => {\r\n        props.setFilter(\"category\", categoryFilterValue);\r\n    }\r\n\r\n    // Filter table by selected start-date and end-date\r\n    const handleFilterByDate = () => {\r\n        if (startDate && endDate) {\r\n            props.setFilter(\"date\", [startDate, endDate]);\r\n        }\r\n    }\r\n\r\n    // Handles all calls to filter the table <-- attached to onClick event of \"apply filter button\" -->\r\n    const applyFilter = () => {\r\n        if (startDate && endDate && categoryFilterValue) {\r\n            handleFilterByDate();\r\n            handleFilterByCategory();\r\n        }\r\n        if (startDate && endDate && !categoryFilterValue) {\r\n            handleFilterByDate();\r\n        }\r\n        if (!startDate && !endDate && categoryFilterValue) {\r\n            handleFilterByCategory();\r\n        }\r\n        if (!startDate && endDate || startDate && !endDate) {\r\n            window.alert(\"Please Make sure you select start-date and end-date\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"filterParameters\" id=\"filterParameters\">\r\n                <div className=\"datePickerWrapper\">\r\n                    <div className=\"Datepicker-grid-container\">\r\n                        <div>Filter </div>\r\n                        <div className=\"startDate\">From: <div className=\"datePickerLabel\">{startDate ? startDate.toLocaleDateString(\"fr-CA\") : null}</div>\r\n                            < DatePicker handleDateChange={handleStartDate} date={startDate} />\r\n                        </div>\r\n                        <div className=\"verticalLine\"></div>\r\n                        <div className=\"endDate\">To: <div className=\"datePickerLabel\">{endDate ? endDate.toLocaleDateString(\"fr-CA\") : null}</div>\r\n                            < DatePicker handleDateChange={handleEndDate} date={endDate} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"resetFilter\" onClick={autoResetFilter}><span>Reset</span>\r\n                    <AiOutlineSync className=\"resetFilter_icon\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"filterByCategoryOptions\" id=\"filterByCategory\">\r\n                <div onChange={handleCategoryOptionsChange} className=\"filterBy-RecievedMoney\">\r\n                    <input type=\"radio\" value=\"recieved\" name=\"category-Filters\" id=\"recievedMoney\" />\r\n                    <label htmlFor=\"recievedMoney\">Payment recieve</label>\r\n                </div>\r\n                <div onChange={handleCategoryOptionsChange} className=\"filterBy-moneySent\">\r\n                    <input type=\"radio\" value=\"sent\" name=\"category-Filters\" id=\"moneySent\" />\r\n                    <label htmlFor=\"moneySent\">Money Sent</label>\r\n                </div>\r\n                <div onChange={handleCategoryOptionsChange} className=\"filterBy-pendingTran\">\r\n                    <input type=\"radio\" value=\"pending\" name=\"category-Filters\" id=\"pendingTran\" />\r\n                    <label htmlFor=\"pendingTran\">Pending</label>\r\n                </div>\r\n                <div onChange={handleCategoryOptionsChange} className=\"filterBy-failedTran\">\r\n                    <input type=\"radio\" value=\"fail\" name=\"category-Filters\" id=\"failedTran\" />\r\n                    <label htmlFor=\"failedTran\">Failed</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"apply-filter\">\r\n                <h3>All Transactions</h3>\r\n                <button onClick={applyFilter} className=\"applyFilter-btn\" id=\"applyFilter-btn\"> Apply Filte </button>\r\n            </div>\r\n            <span className=\"globalFilterInput\" >\r\n                Search:{' '}\r\n                <input\r\n                    type=\"text\"\r\n                    value={value || \"\"}\r\n                    onChange={e => {\r\n                        setValue(e.target.value);\r\n                        onChange(e.target.value);\r\n                    }}\r\n                    placeholder={`records by user name`}\r\n                    style={{\r\n                        fontSize: '1rem',\r\n                        border: '2px solid #32E0C4',\r\n                        }}\r\n>\r\n                </input>\r\n            </span>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Filters;\r\n\r\n\r\n","C:\\Users\\Majeed\\Documents\\GitsHubLocaWorkSpace\\reactTable\\src\\DatePickerCallendarIcon.js",["47"],"import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FiCalendar } from \"react-icons/fi\";\r\n\r\n// create a dom reffrence for our Customized date picker icon\r\nconst ref = React.createRef();\r\n\r\n/**\r\n   * Customise input component for the date picker component\r\n   * replace the default date picker component with with a calendar icon\r\n   */\r\nconst DatePickerCustomInput = React.forwardRef(\r\n    ({ onClick }, ref) => (<div className=\"calendar_icon\" ref={ref} ><FiCalendar onClick={onClick} /></div>)\r\n);\r\n\r\nconst DatePickerCallendarIcon = (props) => {\r\n    return (\r\n        <div className=\"datepicker\" style={style} >\r\n            <DatePicker\r\n                selected={props.date}\r\n                onChange={props.handleDateChange}\r\n                customInput={<DatePickerCustomInput ref={ref} />}\r\n                dateFormat=\"yyyy/MM/dd\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst style = {\r\n    display: \"inline-block\", \r\n    marginLeft: \"6px\",\r\n    fontSize: \"1em\",\r\n    color: \"#32e0c4\",\r\n    cursor: \"pointer\"  \r\n}\r\n\r\n\r\nexport default DatePickerCallendarIcon",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":24},{"ruleId":"52","severity":1,"message":"56","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":43},{"ruleId":"52","severity":1,"message":"57","line":37,"column":29,"nodeType":"54","messageId":"55","endLine":37,"endColumn":37},{"ruleId":"58","severity":1,"message":"59","line":18,"column":33,"nodeType":"60","messageId":"61","endLine":18,"endColumn":39},{"ruleId":"58","severity":1,"message":"59","line":32,"column":37,"nodeType":"60","messageId":"61","endLine":32,"endColumn":43},{"ruleId":"52","severity":1,"message":"62","line":13,"column":11,"nodeType":"54","messageId":"55","endLine":13,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":74,"column":24,"nodeType":"65","messageId":"66","endLine":74,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":74,"column":35,"nodeType":"65","messageId":"66","endLine":74,"endColumn":37},{"ruleId":"63","severity":1,"message":"67","line":74,"column":35,"nodeType":"65","messageId":"66","endLine":74,"endColumn":37},{"ruleId":"63","severity":1,"message":"67","line":74,"column":48,"nodeType":"65","messageId":"66","endLine":74,"endColumn":50},{"ruleId":"52","severity":1,"message":"68","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'useAsyncDebounce' is defined but never used.","'pageSize' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'count' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]